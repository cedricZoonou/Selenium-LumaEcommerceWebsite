<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="9" passed="5" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-21T09:54:41 GMT" name="Default suite" finished-at="2023-12-21T09:57:41 GMT" duration-ms="180445">
    <groups>
      <group name="Purchase">
        <method signature="purchaseExistingCustomerTest.MultipleItemsPurchase(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" name="MultipleItemsPurchase" class="PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest"/>
        <method signature="purchaseExistingCustomerTest.purchaseExistingCustomer(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" name="purchaseExistingCustomer" class="PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest"/>
        <method signature="purchaseExistingCustomerTest.purchaseExistingCustomerAlt(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" name="purchaseExistingCustomerAlt" class="PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2023-12-21T09:54:41 GMT" name="Default test" finished-at="2023-12-21T09:57:41 GMT" duration-ms="180445">
      <class name="PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:54:41 GMT" name="launchApplication" finished-at="2023-12-21T09:54:50 GMT" duration-ms="8984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="MultipleItemsPurchase(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:54:50 GMT" name="MultipleItemsPurchase" data-provider="getData" finished-at="2023-12-21T09:55:12 GMT" duration-ms="21422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Argus All-Weather Tank, password=Password1!, product=Hero Hoodie, email=RedRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleItemsPurchase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:12 GMT" name="tearDown" finished-at="2023-12-21T09:55:12 GMT" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:12 GMT" name="launchApplication" finished-at="2023-12-21T09:55:17 GMT" duration-ms="4735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="MultipleItemsPurchase(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:17 GMT" name="MultipleItemsPurchase" data-provider="getData" finished-at="2023-12-21T09:55:36 GMT" duration-ms="18823" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Hero Hoodie, password=Password1!, product=Argus All-Weather Tank, email=GreenRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button class="action primary checkout" type="submit" data-bind="
                        click: placeOrder,
                        attr: {title: $t('Place Order')},
                        css: {disabled: !isPlaceOrderActionAllowed()},
                        enable: (getCode() == isChecked())
                        " title="Place Order">...</button> is not clickable at point (1059, 446). Other element would receive the click: <div class="checkout-billing-address">...</div>
  (Session info: chrome=120.0.6099.130)
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0edf0c408077ca8175f1adc8a6530bcc, clickElement {id=55586DCC9FD4E9A021B47C8EA15A41FE_element_188}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\CEDRIC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64323}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64323/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (0edf0c408077ca8175f1adc8a6530bcc)] -> xpath: //button[@title='Place Order']]
Session ID: 0edf0c408077ca8175f1adc8a6530bcc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button class="action primary checkout" type="submit" data-bind="
                        click: placeOrder,
                        attr: {title: $t('Place Order')},
                        css: {disabled: !isPlaceOrderActionAllowed()},
                        enable: (getCode() == isChecked())
                        " title="Place Order">...</button> is not clickable at point (1059, 446). Other element would receive the click: <div class="checkout-billing-address">...</div>
  (Session info: chrome=120.0.6099.130)
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0edf0c408077ca8175f1adc8a6530bcc, clickElement {id=55586DCC9FD4E9A021B47C8EA15A41FE_element_188}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\CEDRIC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64323}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64323/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (0edf0c408077ca8175f1adc8a6530bcc)] -> xpath: //button[@title='Place Order']]
Session ID: 0edf0c408077ca8175f1adc8a6530bcc
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at PracticeSelenium.pageobjects.checkoutPage.confirmOrder(checkoutPage.java:42)
at PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest.MultipleItemsPurchase(purchaseExistingCustomerTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleItemsPurchase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:36 GMT" name="tearDown" finished-at="2023-12-21T09:55:36 GMT" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:36 GMT" name="launchApplication" finished-at="2023-12-21T09:55:38 GMT" duration-ms="2280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="purchaseExistingCustomer(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:38 GMT" name="purchaseExistingCustomer" data-provider="getData" finished-at="2023-12-21T09:55:55 GMT" duration-ms="16660" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Argus All-Weather Tank, password=Password1!, product=Hero Hoodie, email=RedRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='action showcart']"}
  (Session info: chrome=120.0.6099.130)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [82401283bd3adbd167d884f409e7f2e5, findElement {using=xpath, value=//a[@class='action showcart']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\CEDRIC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64348}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64348/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 82401283bd3adbd167d884f409e7f2e5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='action showcart']"}
  (Session info: chrome=120.0.6099.130)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [82401283bd3adbd167d884f409e7f2e5, findElement {using=xpath, value=//a[@class='action showcart']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\CEDRIC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64348}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64348/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 82401283bd3adbd167d884f409e7f2e5
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at PracticeSelenium.pageobjects.menProductPage.addToCart(menProductPage.java:104)
at PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest.purchaseExistingCustomer(purchaseExistingCustomerTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseExistingCustomer -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:55 GMT" name="tearDown" finished-at="2023-12-21T09:55:55 GMT" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:55 GMT" name="launchApplication" finished-at="2023-12-21T09:55:59 GMT" duration-ms="3821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseExistingCustomer(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:55:59 GMT" name="purchaseExistingCustomer" data-provider="getData" finished-at="2023-12-21T09:56:16 GMT" duration-ms="17590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Argus All-Weather Tank, password=Password1!, product=Hero Hoodie, email=RedRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseExistingCustomer -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:16 GMT" name="tearDown" finished-at="2023-12-21T09:56:17 GMT" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:17 GMT" name="launchApplication" finished-at="2023-12-21T09:56:19 GMT" duration-ms="2743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseExistingCustomer(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:19 GMT" name="purchaseExistingCustomer" data-provider="getData" finished-at="2023-12-21T09:56:38 GMT" duration-ms="18283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Hero Hoodie, password=Password1!, product=Argus All-Weather Tank, email=GreenRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseExistingCustomer -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:38 GMT" name="tearDown" finished-at="2023-12-21T09:56:38 GMT" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:38 GMT" name="launchApplication" finished-at="2023-12-21T09:56:40 GMT" duration-ms="2290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseExistingCustomerAlt(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:40 GMT" name="purchaseExistingCustomerAlt" data-provider="getData" finished-at="2023-12-21T09:56:58 GMT" duration-ms="18114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Argus All-Weather Tank, password=Password1!, product=Hero Hoodie, email=RedRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseExistingCustomerAlt -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:58 GMT" name="tearDown" finished-at="2023-12-21T09:56:58 GMT" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:56:58 GMT" name="launchApplication" finished-at="2023-12-21T09:57:01 GMT" duration-ms="2297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseExistingCustomerAlt(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:01 GMT" name="purchaseExistingCustomerAlt" data-provider="getData" finished-at="2023-12-21T09:57:19 GMT" duration-ms="18694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Hero Hoodie, password=Password1!, product=Argus All-Weather Tank, email=GreenRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseExistingCustomerAlt -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:19 GMT" name="tearDown" finished-at="2023-12-21T09:57:20 GMT" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:20 GMT" name="launchApplication" finished-at="2023-12-21T09:57:23 GMT" duration-ms="2809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:23 GMT" name="OrderHistoryTest" data-provider="getData" finished-at="2023-12-21T09:57:31 GMT" depends-on-methods="PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest.purchaseExistingCustomerAlt" duration-ms="8637" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Argus All-Weather Tank, password=Password1!, product=Hero Hoodie, email=RedRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest.OrderHistoryTest(purchaseExistingCustomerTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:31 GMT" name="tearDown" finished-at="2023-12-21T09:57:31 GMT" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:31 GMT" name="launchApplication" finished-at="2023-12-21T09:57:34 GMT" duration-ms="2222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest(java.util.HashMap)[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:34 GMT" name="OrderHistoryTest" data-provider="getData" finished-at="2023-12-21T09:57:41 GMT" depends-on-methods="PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest.purchaseExistingCustomerAlt" duration-ms="7215" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{product2=Hero Hoodie, password=Password1!, product=Argus All-Weather Tank, email=GreenRanger@aol.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest.OrderHistoryTest(purchaseExistingCustomerTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest@644baf4a]" started-at="2023-12-21T09:57:41 GMT" name="tearDown" finished-at="2023-12-21T09:57:41 GMT" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- PracticeSelenium.SeleniumFrameworkDesign.purchaseExistingCustomerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
